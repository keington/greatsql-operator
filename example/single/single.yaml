apiVersion: greatsql.greatsql.cn/v1
kind: Single
metadata:
  labels:
    app.kubernetes.io/name: single
    app.kubernetes.io/instance: greatsql-single
    app.kubernetes.io/part-of: greatsql
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: greatsql
  name: greatsql-single
  namespace: greatsql
  finalizers:
    - finalizer.greatsql.cn
spec:
  greatSqlType: single
  role: single
  size: 1
  podSpec:
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
      # kubernetes core affinity
      advanced: 
    nodeSelector:
      kubernetes.io/os: linux
    tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
    terminationGracePeriodSeconds: 30
    schedulerName: default-scheduler
    podSecurityContext:
      runAsUser: 0
      runAsGroup: 0
    serviceAccountName: default
    storage:
      persistentVolumeClaimTemplate:
        storageClassName: ebs-gp3-sc
        resources:
          requests:
            # default storage size is 5G
            storage: 6Gi
    image: greatsql/greatsql:latest
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        memory: "2Gi"
        cpu: "2"
      limits:
        memory: "8Gi"
        cpu: "4"
    startupProbe:
      tcpSocket:
        port: 3306
      initialDelaySeconds: 5
      periodSeconds: 20
    readinessProbe:
      tcpSocket:
        port: 3306
      initialDelaySeconds: 5
      periodSeconds: 20
    livenessProbe:
      tcpSocket:
        port: 3306
      initialDelaySeconds: 30
      periodSeconds: 20
    # containerSecurityContext:
    #   allowPrivilegeEscalation: false
    #   readOnlyRootFilesystem: true
    #   runAsNonRoot: true
    #   runAsUser: 1000
    #   capabilities:
    #     drop:
    #       - "ALL"
    securityContext:
      privileged: false
    envs:
      - name: MYSQL_ROOT_PASSWORD
        value: "GreatSql@123"
  ports:
    - name: mysql
      protocol: TCP
      port: 3306
      targetPort: 3306
  type: LoadBalancer
  dnsPolicy: ClusterFirst
  upgradeOptions:
    versionServiceEndpoint: ""
    apply: ""
  updateStrategy: RollingUpdate
